name: "üöÄ Deploy (OIDC + Key Vault)"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write  # required for OIDC
  contents: read   # required to checkout the code

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_RESOURCE_GROUP: vimarsh-rg
  FUNCTION_APP: vimarsh-backend
  STATIC_APP_NAME: vimarsh-frontend
  KEYVAULT_NAME: vimarsh-kv
  PYTHON_VERSION: '3.12'
  NODE_VERSION: '18'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: üì• Checkout
      uses: actions/checkout@v4

    - name: üîê Azure OIDC Login
      uses: azure/login@v2
      with:
        client-id:        ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id:        ${{ secrets.AZURE_TENANT_ID }}
        subscription-id:  ${{ env.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true

    # Build and publish backend
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    - name: üì¶ Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    - name: üöÄ Publish Azure Function App
      run: |
        cd backend
        func azure functionapp publish $FUNCTION_APP --build-native-deps --no-bundler --python

    # Build and deploy frontend
    - name: ‚ö° Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: üì¶ Install frontend dependencies & build
      run: |
        cd frontend
        npm ci
        npm run build
    - name: üåê Deploy Static Web App
      uses: Azure/static-web-apps-deploy@v1
      with:
        app_location: frontend
        output_location: dist
        skip_app_build: true
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        action: upload

    # Grant Key Vault access to managed identity (idempotent)
    - name: üîë Grant MI Key Vault access
      shell: bash
      run: |
        MI_PRINCIPAL=$(az functionapp identity show -g $AZURE_RESOURCE_GROUP -n $FUNCTION_APP --query principalId -o tsv)
        KV_ID=$(az keyvault show -n $KEYVAULT_NAME -g ${AZURE_RESOURCE_GROUP/-rg/-db-rg} --query id -o tsv)
        az role assignment create \
          --assignee-object-id $MI_PRINCIPAL \
          --assignee-principal-type ServicePrincipal \
          --role "Key Vault Secrets User" \
          --scope $KV_ID \
          --only-show-errors || echo "Role assignment already exists"

    # Non-secret app settings
    - name: ‚öôÔ∏è  Configure Function App settings
      run: |
        az functionapp config appsettings set \
          -g $AZURE_RESOURCE_GROUP -n $FUNCTION_APP \
          --settings ENABLE_AUTH=true CORS_ORIGINS=https://vimarsh.vedprakash.net

    # Simple health check
    - name: ‚úÖ Smoke Test
      run: |
        curl -fsSL https://$FUNCTION_APP.azurewebsites.net/api/health || exit 1 