{"version":3,"file":"static/js/128.ef08620f.chunk.js","mappings":"+PAiBA,MAkXA,EAlXgEA,IAMzD,IAN0D,uBAC/DC,EAAsB,sBACtBC,EAAqB,oBACrBC,EAAmB,QACnBC,EAAO,aACPC,GAAe,GAChBL,EACC,MAAOM,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAiB,QACtDC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IAGzCG,EAAUC,MAAMC,KAAK,IAAIC,KAAKb,GAA0B,IAAIc,IAAIC,GAAKA,EAAEC,UAGvEC,GAAyBjB,GAA0B,IAAIkB,OAAOC,IAClE,MAAMC,EAAmC,QAAnBf,GAA4Bc,EAAYH,SAAWX,EACnEgB,EAAgBF,EAAYG,KAAKC,cAAcC,SAAShB,EAAYe,gBACrDJ,EAAYM,YAAYF,cAAcC,SAAShB,EAAYe,eAChF,OAAOH,GAAiBC,IAIpBK,EAAkBV,IACtB,MAAMW,EAAS,CACbC,UAAW,CAAEC,KAAM,qBAAOC,MAAO,UAAWC,MAAO,aACnDC,WAAY,CAAEH,KAAM,eAAMC,MAAO,UAAWC,MAAO,cACnDE,WAAY,CAAEJ,KAAM,eAAMC,MAAO,UAAWC,MAAO,cACnDG,cAAe,CAAEL,KAAM,eAAMC,MAAO,UAAWC,MAAO,iBACtDI,SAAU,CAAEN,KAAM,eAAMC,MAAO,UAAWC,MAAO,aAEnD,OAAOJ,EAAOX,IAAkCW,EAAOC,WAGzD,OAAKxB,GAGHgC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,WAAY,qBACZC,eAAgB,aAChBC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,IACRC,QAAS,QACTC,UACAC,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVM,WAAY,oDACZS,aAAc,SACdH,QAAS,OACTI,SAAU,QACVC,MAAO,OACPC,UAAW,OACXC,UAAW,OACXlB,SAAU,WACVmB,UAAW,iCACXC,OAAQ,qCACR5B,MAAO,QACP6B,WAAY,0DACZT,SAAA,EAEAC,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVQ,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBa,aAAc,UACdV,SAAA,EACAC,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CAAEQ,QAAS,OAAQC,WAAY,SAAUe,IAAK,WAAYX,SAAA,EACpEd,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAAEyB,SAAU,UAAWZ,SAAC,kBACrCd,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACT0B,OAAQ,EACRD,SAAU,SACVE,WAAY,MACZlC,MAAO,QACPmC,WAAY,gCACZf,SAAC,0BAIJ/C,IACCiC,EAAAA,EAAAA,KAAA,UACE8B,QAAS/D,EACTkC,MAAO,CACLM,WAAY,2BACZe,OAAQ,qCACRN,aAAc,SACdH,QAAS,SACTnB,MAAO,QACPqC,OAAQ,UACRtB,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBqB,WAAY,iBAEdC,aAAeC,IACbA,EAAEC,cAAclC,MAAMM,WAAa,4BAErC6B,aAAeF,IACbA,EAAEC,cAAclC,MAAMM,WAAa,4BACnCO,UAEFd,EAAAA,EAAAA,KAACqC,EAAAA,EAAC,CAACC,KAAM,WAMfvB,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVC,SAAU,WACVsB,aAAc,UACdV,SAAA,EACAd,EAAAA,EAAAA,KAAA,SACEuC,KAAK,OACLC,YAAY,0BACZC,MAAOrE,EACPsE,SAAWR,GAAM7D,EAAe6D,EAAES,OAAOF,OACzCxC,MAAO,CACLiB,MAAO,OACPX,WAAY,2BACZe,OAAQ,qCACRN,aAAc,OACdH,QAAS,sBACTnB,MAAO,QACPgC,SAAU,OACVkB,QAAS,OACTpC,eAAgB,aAChBqC,UAAW,iBAGf7C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAQ,CACPR,KAAM,GACNrC,MAAO,CACLC,SAAU,WACVE,KAAM,OACND,IAAK,MACL4C,UAAW,mBACXrD,MAAO,kCAMbqB,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVQ,QAAS,OACTgB,IAAK,SACLD,aAAc,OACdwB,SAAU,QACVlC,SAAA,EACAd,EAAAA,EAAAA,KAAA,UACE8B,QAASA,IAAM5D,EAAkB,OACjC+B,MAAO,CACLM,WAA+B,QAAnBtC,EACR,4CACA,2BACJqD,OAAQ,qCACRN,aAAc,SACdH,QAAS,cACTnB,MAAO,QACPgC,SAAU,SACVE,WAAY,MACZG,OAAQ,UACRC,WAAY,gBACZxB,eAAgB,cAChBM,SACH,QAGAxC,EAAQI,IAAIE,IACX,MAAMqE,EAAc3D,EAAeV,GACnC,OACEmC,EAAAA,EAAAA,MAAA,UAEEe,QAASA,IAAM5D,EAAkBU,GACjCqB,MAAO,CACLM,WAAYtC,IAAmBW,EAC3B,4CACA,2BACJ0C,OAAQ,qCACRN,aAAc,SACdH,QAAS,cACTnB,MAAO,QACPgC,SAAU,SACVE,WAAY,MACZG,OAAQ,UACRC,WAAY,gBACZxB,eAAgB,aAChBC,QAAS,OACTC,WAAY,SACZe,IAAK,UACLX,SAAA,EAEFd,EAAAA,EAAAA,KAAA,QAAAc,SAAOmC,EAAYxD,OAClBwD,EAAYtD,QArBRf,SA4BboB,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVQ,QAAS,OACTyC,oBAAqB,uCACrBzB,IAAK,QACLX,SACCjC,EAAsBH,IAAKK,IAAiB,IAADoE,EAC1C,MAAMF,EAAc3D,EAAeP,EAAYH,QACzCwE,EAAavF,IAA0BkB,EAAYsE,GAEzD,OACEtC,EAAAA,EAAAA,MAAA,OAEEe,QAASA,IAAMhE,EAAoBiB,GACnCkB,MAAO,CACLM,WAAY6C,EACR,8EACA,2BACJ9B,OAAQ8B,EACJ,oBACA,qCACJpC,aAAc,OACdH,QAAS,SACTkB,OAAQ,UACRC,WAAY,gBACZxB,eAAgB,aAChBN,SAAU,WACVO,QAAS,OACTC,WAAY,SACZe,IAAK,QAEPQ,aAAeC,IACRkB,IACHlB,EAAEC,cAAclC,MAAMM,WAAa,4BACnC2B,EAAEC,cAAclC,MAAM8C,UAAY,mBAClCb,EAAEC,cAAclC,MAAMoB,UAAY,kCAGtCe,aAAeF,IACRkB,IACHlB,EAAEC,cAAclC,MAAMM,WAAa,2BACnC2B,EAAEC,cAAclC,MAAM8C,UAAY,gBAClCb,EAAEC,cAAclC,MAAMoB,UAAY,SAEpCP,SAAA,EAGFd,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViB,MAAO,OACPoC,OAAQ,OACR/C,WAAW,2BAADgD,OAA6BN,EAAYvD,MAAK,MAAA6D,OAAKN,EAAYvD,MAAK,OAC9EsB,aAAc,OACdP,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBe,SAAU,SACV8B,WAAY,EACZnC,UAAW,iCACXP,SACCmC,EAAYxD,QAIfsB,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CAAEwD,KAAM,EAAGC,SAAU,GAAI5C,SAAA,EACnCd,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACT0B,OAAQ,eACRD,SAAU,UACVE,WAAY,MACZlC,MAAO,QACPmC,WAAY,gCACZf,SACC/B,EAAY4E,cAAgB5E,EAAYG,MAAQ,aAGnDc,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CACR0B,OAAQ,aACRD,SAAU,SACVhC,MAAO,2BACPkE,WAAY,MACZnD,QAAS,cACToD,gBAAiB,EACjBC,gBAAiB,WACjBC,SAAU,UACVjD,SACC/B,EAAYM,eAGf0B,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVQ,QAAS,OACTuC,SAAU,OACVvB,IAAK,OACLC,SAAU,SACVhC,MAAO,4BACPoB,SAAA,EACAC,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CAAEQ,QAAS,OAAQC,WAAY,SAAUe,IAAK,WAAYX,SAAA,EACpEd,EAAAA,EAAAA,KAACgE,EAAAA,EAAK,CAAC1B,KAAM,MACbtC,EAAAA,EAAAA,KAAA,QAAAc,SAAO/B,EAAYkF,kBAErBlD,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CAAEQ,QAAS,OAAQC,WAAY,SAAUe,IAAK,WAAYX,SAAA,EACpEd,EAAAA,EAAAA,KAACkE,EAAAA,EAAQ,CAAC5B,KAAM,MAChBtC,EAAAA,EAAAA,KAAA,QAAAc,UAAkC,QAA3BqC,EAAApE,EAAYoF,uBAAe,IAAAhB,OAAA,EAA3BA,EAA6BiB,MAAM,EAAG,GAAGC,KAAK,QAAS,+BAMpErE,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVC,SAAU,WACVC,IAAK,OACLE,MAAO,OACPE,WAAW,GAADgD,OAAKN,EAAYvD,MAAK,MAChC4B,OAAO,aAADiC,OAAeN,EAAYvD,OACjCsB,aAAc,OACdH,QAAS,kBACTa,SAAU,UACVE,WAAY,MACZlC,MAAOuD,EAAYvD,MACnB4E,cAAe,YACfC,cAAe,SACfzD,SACCmC,EAAYtD,QAIdyD,IACCpD,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVC,SAAU,WACVC,IAAK,UACLE,MAAO,UACPa,MAAO,OACPoC,OAAQ,OACR/C,WAAY,4CACZS,aAAc,MACdP,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBjB,MAAO,QACPgC,SAAU,SACVE,WAAY,MACZP,UAAW,sCACXP,SAAC,aAhIA/B,EAAYsE,QA0IS,IAAjCxE,EAAsB2F,SACrBzD,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVwE,UAAW,SACX5D,QAAS,YACTnB,MAAO,4BACPoB,SAAA,EACAd,EAAAA,EAAAA,KAAC0E,EAAAA,EAAK,CAACpC,KAAM,GAAIrC,MAAO,CAAEuB,aAAc,OAAQmD,QAAS,OACzD3E,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAE0B,OAAQ,eAAgBD,SAAU,UAAWZ,SAAC,4BAC3Dd,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAAE0B,OAAQ,EAAGD,SAAU,UAAWZ,SAAC,uDAvU7B,M,4BClCb,SAAS8D,IACtB,MAAOC,EAAUC,IAAe3G,EAAAA,EAAAA,UAAoB,KAC7C4G,EAAWC,IAAgB7G,EAAAA,EAAAA,UAAS,KACpC8G,EAAWC,IAAgB/G,EAAAA,EAAAA,WAAS,IAG3CgH,EAAAA,EAAAA,WAAU,KAQR,IAAKC,SAASC,eAAe,mBAAoB,CAC/C,MAAMC,EAAaF,SAASG,cAAc,SAC1CD,EAAWjC,GAAK,kBAChBiC,EAAWE,YAVD,6GAWVJ,SAASK,KAAKC,YAAYJ,EAC5B,GACC,IACH,MAAOK,EAAaC,IAAkBzH,EAAAA,EAAAA,WAAS,IACxC0H,EAAyBC,IAA8B3H,EAAAA,EAAAA,WAAS,IAGjE,oBACJ4H,EAAmB,uBACnBC,EAAsB,uBACtBpI,EAAsB,mBACtBqI,EAAkB,kBAClBC,IACEC,EAAAA,EAAAA,OAGJhB,EAAAA,EAAAA,WAAU,KAC8B,IAAlCvH,EAAuB4G,QAAiByB,GAC1CC,KAED,CAACtI,EAAuB4G,OAAQyB,EAAoBC,KAGvDf,EAAAA,EAAAA,WAAU,KACJvH,EAAuB4G,OAAS,IAAMuB,IAAwBE,GAChEH,GAA2B,IAE5B,CAAClI,EAAuB4G,OAAQuB,EAAqBE,IAExD,MAoIMG,EAlDkBC,MACtB,IAAKN,EACH,MAAO,CACL,kEACA,6DACA,+DACA,oEAIJ,OAAQA,EAAoBnH,QAC1B,IAAK,aACH,MAAO,CACL,gFACA,sEACA,6EACA,gEAEJ,IAAK,aACH,MAAO,CACL,oEACA,qEACA,yDACA,qEAEJ,IAAK,gBACH,MAAO,CACL,uDACA,0EACA,+DACA,mEAEJ,IAAK,WACH,MAAO,CACL,8DACA,4DACA,iEACA,8DAGJ,QACE,MAAO,CACL,kEACA,6DACA,+DACA,sEAKayH,GAErB,OACEtF,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVqG,UAAW,QACX/F,WAAY,oDACZb,MAAO,QACP6B,WAAY,0DACZT,SAAA,EAEAC,EAAAA,EAAAA,MAAA,UAAQd,MAAO,CACbY,QAAS,YACTJ,QAAS,OACTE,eAAgB,gBAChBD,WAAY,SACZH,WAAY,2BACZC,eAAgB,aAChB+F,aAAc,sCACdzF,SAAA,EACAC,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CAAEQ,QAAS,OAAQC,WAAY,SAAUe,IAAK,WAAYX,SAAA,EACpEd,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACViB,MAAO,OACPoC,OAAQ,OACR/C,WAAY,4CACZS,aAAc,MACdP,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBe,SAAU,SACVE,WAAY,OACZlC,MAAO,QACP4B,OAAQ,qCACRD,UAAW,iCACXP,SAAC,OAGHC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEd,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAE0B,OAAQ,EAAGD,SAAU,SAAUE,WAAY,OAAQd,SAAC,aACjEd,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CACR0B,OAAQ,EACRD,SAAU,UACViD,QAAS,GACT/C,WAAY,MACZlC,MAAO,WACPoB,SAAC,qCAOPC,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CAAEQ,QAAS,OAAQC,WAAY,SAAUe,IAAK,QAASX,SAAA,EACjEC,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVM,WAAY,2BACZS,aAAc,UACdH,QAAS,cACTS,OAAQ,qCACRd,eAAgB,cAChBM,SAAA,EACAd,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAAEyB,SAAU,SAAUE,WAAY,OAAQd,UACjC,OAAnBiF,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB7G,OAAQ,gBAEhCc,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CACXyB,SAAU,UACViD,QAAS,GACT6B,WAAY,SACZlC,cAAe,YACfC,cAAe,SACfzD,SACiC,eAAb,OAAnBiF,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBnH,QAAyB,YACd,gBAAb,OAAnBmH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBnH,QAA0B,aACf,gBAAb,OAAnBmH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBnH,QAA0B,aACf,mBAAb,OAAnBmH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBnH,QAA6B,gBAClB,cAAb,OAAnBmH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBnH,QAAwB,WAC7C,kBAGLoB,EAAAA,EAAAA,KAAA,UACE8B,QAASA,IAAMgE,GAA4BD,GAC3C5F,MAAO,CACLM,WAAY,2BACZe,OAAQ,qCACR5B,MAAO,QACPmB,QAAS,SACTG,aAAc,SACde,OAAQ,UACRtB,QAAS,OACTC,WAAY,SACZsB,WAAY,iBAEdyE,MAAM,qBACNC,UAAWX,EAAoBjF,UAE/Bd,EAAAA,EAAAA,KAAC2G,EAAAA,EAAK,CAACrE,KAAM,QAEftC,EAAAA,EAAAA,KAAA,UACE8B,QAASA,IAAM8D,GAAgBD,GAC/B1F,MAAO,CACLM,WAAYoF,EAAc,yBAA2B,2BACrDrE,OAAO,aAADiC,OAAeoC,EAAc,yBAA2B,4BAC9DjG,MAAO,QACPmB,QAAS,SACTG,aAAc,SACde,OAAQ,UACRtB,QAAS,OACTC,WAAY,SACZsB,WAAY,iBACZlB,SAED6E,GAAc3F,EAAAA,EAAAA,KAAC4G,EAAAA,EAAM,CAACtE,KAAM,MAAStC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAG,CAACvE,KAAM,aAMtDuD,IACC7F,EAAAA,EAAAA,KAAC8G,EAAmB,CAClBlJ,uBAAwBA,EACxBC,sBAA0C,OAAnBkI,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB1C,GAC5CvF,oBA3PyBiB,IAC/BiH,EAAuBjH,GACvB+G,GAA2B,GAE3BhB,EAAY,KAwPN/G,QAASA,IAAM+H,GAA2B,GAC1C9H,cAAc,KAKlB+C,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVgB,SAAU,SACVU,OAAQ,SACRd,QAAS,YACTyF,UAAW,sBACX7F,QAAS,OACTsG,cAAe,UACfjG,SAAA,CAEqB,IAApB+D,EAASL,SACRzD,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVwE,UAAW,SACX5D,QAAS,YACTW,aAAc,QACdV,SAAA,EACAd,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVyB,SAAU,OACVF,aAAc,OACd1C,OAAQ,6CACRgC,SAAC,uBAEDiF,GA8CAhF,EAAAA,EAAAA,MAAAiG,EAAAA,SAAA,CAAAlG,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAId,MAAO,CACTyB,SAAU,SACVE,WAAY,MACZJ,aAAc,OACdK,WAAY,gCACZf,SAAA,CAAC,mBAAgD,cAA/BiF,EAAoBnH,OAAyB,YAChC,eAA/BmH,EAAoBnH,OAA0B,aACf,eAA/BmH,EAAoBnH,OAA0B,aACf,kBAA/BmH,EAAoBnH,OAA6B,gBAClB,aAA/BmH,EAAoBnH,OAAwB,WAC5C,YAAY,eACdmC,EAAAA,EAAAA,MAAA,KAAGd,MAAO,CACRyB,SAAU,UACViD,QAAS,GACT1D,SAAU,QACVU,OAAQ,cACRiC,WAAY,MACZ/B,WAAY,gCACZf,SAAA,CACgC,cAA/BiF,EAAoBnH,OACjB,4FAC+B,eAA/BmH,EAAoBnH,OACpB,wEAC+B,eAA/BmH,EAAoBnH,OACpB,oEAC+B,kBAA/BmH,EAAoBnH,OACpB,uEAC+B,aAA/BmH,EAAoBnH,OACpB,gEACA,4FAA6F,KACjGoB,EAAAA,EAAAA,KAAA,UAAAc,SAASiF,EAAoB7G,OAAc,QAE7Cc,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CACRyB,SAAU,OACViD,QAAS,GACTnD,aAAc,OACdyF,UAAW,UACXnG,SACCiF,EAAoB1G,eAGvBW,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVQ,QAAS,OACTyC,oBAAqB,uCACrBzB,IAAK,OACLR,SAAU,QACVU,OAAQ,UACRb,SACCsF,EAAa1H,IAAI,CAACwI,EAAQC,KACzBnH,EAAAA,EAAAA,KAAA,UAEE8B,QAASA,IAAMkD,EAAakC,GAC5BjH,MAAO,CACLM,WAAY,2BACZe,OAAQ,qCACR5B,MAAO,QACPmB,QAAS,OACTG,aAAc,UACde,OAAQ,UACR0C,UAAW,OACX/C,SAAU,SACVkC,WAAY,MACZ5B,WAAY,gBACZxB,eAAgB,cAElByB,aAAeC,IACbA,EAAEC,cAAclC,MAAMM,WAAa,2BACnC2B,EAAEC,cAAclC,MAAM8C,UAAY,mBAClCb,EAAEC,cAAclC,MAAMoB,UAAY,iCAEpCe,aAAeF,IACbA,EAAEC,cAAclC,MAAMM,WAAa,2BACnC2B,EAAEC,cAAclC,MAAM8C,UAAY,gBAClCb,EAAEC,cAAclC,MAAMoB,UAAY,QAClCP,SAEDoG,GA1BIC,UAhGbpG,EAAAA,EAAAA,MAAAiG,EAAAA,SAAA,CAAAlG,SAAA,EACEd,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACTyB,SAAU,SACVE,WAAY,MACZJ,aAAc,OACdK,WAAY,gCACZf,SAAC,wBACHC,EAAAA,EAAAA,MAAA,KAAGd,MAAO,CACRyB,SAAU,UACViD,QAAS,GACT1D,SAAU,QACVU,OAAQ,cACRiC,WAAY,MACZ/B,WAAY,gCACZf,SAAA,EACAd,EAAAA,EAAAA,KAAA,UAAAc,SAAQ,+BAAkCd,EAAAA,EAAAA,KAAA,SAAK,4FAGjDA,EAAAA,EAAAA,KAAA,UACE8B,QAASA,IAAMgE,GAA2B,GAC1C7F,MAAO,CACLM,WAAY,4CACZe,OAAQ,OACR5B,MAAO,QACPmB,QAAS,YACTG,aAAc,OACdU,SAAU,SACVE,WAAY,MACZG,OAAQ,UACRV,UAAW,qCACXW,WAAY,iBAEdC,aAAeC,IACbA,EAAEC,cAAclC,MAAM8C,UAAY,mBAClCb,EAAEC,cAAclC,MAAMoB,UAAY,sCAEpCe,aAAeF,IACbA,EAAEC,cAAclC,MAAM8C,UAAY,gBAClCb,EAAEC,cAAclC,MAAMoB,UAAY,sCAClCP,SACH,uCA4FTd,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVwD,KAAM,IACNjC,aAAc,OACdJ,UAAW,QACXN,SACC+D,EAASnG,IAAK0I,IACbpH,EAAAA,EAAAA,KAAA,OAAsBC,MAAO,CAC3BQ,QAAS,OACTE,eAAgByG,EAAQC,OAAS,WAAa,aAC9C7F,aAAc,QACdV,UACAC,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVgB,SAAU,MACVV,WAAY6G,EAAQC,OAChB,4CACA,2BACJrG,aAAc,OACdH,QAAS,OACTL,eAAgB,aAChBc,OAAQ,qCACRD,UAAW,iCACXP,SAAA,EACEsG,EAAQC,SACRtG,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVyB,SAAU,SACViD,QAAS,GACTnD,aAAc,SACdf,QAAS,OACTC,WAAY,SACZe,IAAK,UACLX,SAAA,EACAd,EAAAA,EAAAA,KAAA,QAAAc,SAAM,iBAAS,KAAqB,OAAnBiF,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBpC,eAAgB,sBAG1D3D,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVyB,SAAU,UACVkC,WAAY,OACZ9C,SACCsG,EAAQC,QACPrH,EAAAA,EAAAA,KAAA,OAAAc,SAAMsG,EAAQE,QAEdtH,EAAAA,EAAAA,KAACuH,EAAAA,GAAa,CAAAzG,SAAEsG,EAAQE,UAG5BtH,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVyB,SAAU,SACViD,QAAS,GACT6C,UAAW,SACX/C,UAAW2C,EAAQC,OAAS,QAAU,QACtCvG,SACCsG,EAAQK,UAAUC,2BA5CfN,EAAQ/D,OAoDrB4B,IACCjF,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVQ,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZG,QAAS,OACTW,aAAc,QACdV,UACAC,EAAAA,EAAAA,MAAA,OAAKd,MAAO,CACVM,WAAY,2BACZS,aAAc,OACdH,QAAS,cACTL,eAAgB,aAChBc,OAAQ,qCACRb,QAAS,OACTC,WAAY,SACZe,IAAK,QACLX,SAAA,EACAd,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVQ,QAAS,OACTgB,IAAK,WACLX,SACC,CAAC,EAAG,EAAG,GAAGpC,IAAKiJ,IACd3H,EAAAA,EAAAA,KAAA,OAEEC,MAAO,CACLiB,MAAO,MACPoC,OAAQ,MACR/C,WAAY,QACZS,aAAc,MACd4G,UAAU,0BAADrE,OAAgC,GAAJoE,EAAO,gBANzCA,OAWX5G,EAAAA,EAAAA,MAAA,QAAMd,MAAO,CAAEyB,SAAU,UAAWZ,SAAA,EACd,OAAnBiF,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBpC,eAAgB,aAAa,6BAO3D5C,EAAAA,EAAAA,MAAA,QACE8G,SA3faC,UAEnB,GADA5F,EAAE6F,kBACGhD,EAAUiD,QAAU/C,IAAcc,EAAqB,OAE5D,MAAMkC,EAAuB,CAC3B5E,GAAI6E,KAAKC,MAAMC,WACfd,KAAMvC,EACNsC,QAAQ,EACRI,UAAW,IAAIS,MAGjBpD,EAAYuD,GAAQ,IAAIA,EAAMJ,IAC9B,MAAMK,EAAWvD,EACjBC,EAAa,IACbE,GAAa,GAEb,IAEE,MAAMqD,EAAiB1D,EAAST,OAAO,GAAG1F,IAAI8J,IAAG,CAC/CC,KAAMD,EAAInB,OAAS,OAAS,YAC5BqB,QAASF,EAAIlB,QAITqB,GAASC,EAAAA,EAAAA,iBACTC,QAAiBC,MAAM,GAADvF,OAAIoF,EAAM,uBAAuB,CAC3DI,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOd,EACPe,SAAU,UACVC,mBAAmB,EACnBC,eAAe,EACfC,qBAAsBjB,EACtBkB,eAAgB1D,EAAoB1C,OAIxC,IAAKwF,EAASa,GACZ,MAAM,IAAIC,MAAM,cAADpG,OAAesF,EAASe,SAGzC,MAAMC,QAAahB,EAASiB,OAItBC,EAAuB,CAC3B1G,IAAK6E,KAAKC,MAAQ,GAAGC,WACrBd,KAAMuC,EAAKhB,SACXxB,QAAQ,EACRI,UAAW,IAAIS,MAGjBpD,EAAYuD,GAAQ,IAAIA,EAAM0B,GAEhC,CAAE,MAAOC,GACPC,QAAQD,MAAM,wCAAyCA,GAGvD,MAAME,EAAyB,CAC7B7G,IAAK6E,KAAKC,MAAQ,GAAGC,WACrBd,KAAM,wJACND,QAAQ,EACRI,UAAW,IAAIS,MAGjBpD,EAAYuD,GAAQ,IAAIA,EAAM6B,GAChC,CAAC,QACChF,GAAa,EACf,GAqbMjF,MAAO,CACLC,SAAU,SACVI,OAAQ,OACRC,WAAYwF,EAAsB,2BAA6B,4BAC/D/E,aAAc,SACdH,QAAS,OACTL,eAAgB,aAChBc,OAAO,aAADiC,OAAewC,EAAsB,2BAA6B,4BACxE1E,UAAW,gCACXZ,QAAS,OACTgB,IAAK,OACLf,WAAY,SACZiE,QAASoB,EAAsB,EAAI,GACnCoE,cAAepE,EAAsB,OAAS,QAC9CjF,SAAA,EAEFd,EAAAA,EAAAA,KAAA,SACEuC,KAAK,OACLE,MAAOsC,EACPrC,SAAWR,GAAM8C,EAAa9C,EAAES,OAAOF,OACvCD,YAAauD,EAAsB,iCAAmC,2CACtEW,UAAWX,EACX9F,MAAO,CACLwD,KAAM,IACNlD,WAAYwF,EAAsB,2BAA6B,4BAC/DzE,OAAO,aAADiC,OAAewC,EAAsB,2BAA6B,4BACxE/E,aAAc,OACdH,QAAS,cACTnB,MAAO,QACPgC,SAAU,OACVkB,QAAS,OACTpC,eAAgB,aAChBuB,OAAQgE,EAAsB,OAAS,kBAG3C/F,EAAAA,EAAAA,KAAA,UACEuC,KAAK,SACLmE,UAAW3B,EAAUiD,QAAU/C,IAAcc,EAC7C9F,MAAO,CACLM,WAAYwE,EAAUiD,SAAW/C,GAAac,EAC1C,4CACA,2BACJzE,OAAQ,OACRN,aAAc,OACdH,QAAS,OACTnB,MAAO,QACPqC,OAAQgD,EAAUiD,SAAW/C,GAAac,EAAsB,UAAY,cAC5EtF,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChB+C,SAAU,OACV1B,WAAY,gBACZX,UAAW0D,EAAUiD,SAAW/C,GAAac,EAAsB,qCAAuC,QAC1GjF,UAEFd,EAAAA,EAAAA,KAACoK,EAAAA,EAAI,CAAC9H,KAAM,eAMxB,C","sources":["components/PersonalitySelector.tsx","components/CleanSpiritualInterface.tsx"],"sourcesContent":["/**\r\n * Enhanced Personality Selector Component for Vimarsh\r\n * Beautiful modal interface for selecting spiritual personalities\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { X, Sparkles, Brain, Clock, BookOpen } from 'lucide-react';\r\nimport { Personality } from '../contexts/PersonalityContext';\r\n\r\ninterface PersonalitySelectorProps {\r\n  availablePersonalities: Personality[];\r\n  selectedPersonalityId?: string;\r\n  onPersonalitySelect: (personality: Personality) => void;\r\n  onClose?: () => void;\r\n  showAsDialog?: boolean;\r\n}\r\n\r\nconst PersonalitySelector: React.FC<PersonalitySelectorProps> = ({\r\n  availablePersonalities,\r\n  selectedPersonalityId,\r\n  onPersonalitySelect,\r\n  onClose,\r\n  showAsDialog = true\r\n}) => {\r\n  const [selectedDomain, setSelectedDomain] = useState<string>('all');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  // Get unique domains from available personalities\r\n  const domains = Array.from(new Set((availablePersonalities || []).map(p => p.domain)));\r\n\r\n  // Filter personalities based on domain and search\r\n  const filteredPersonalities = (availablePersonalities || []).filter(personality => {\r\n    const matchesDomain = selectedDomain === 'all' || personality.domain === selectedDomain;\r\n    const matchesSearch = personality.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                         personality.description.toLowerCase().includes(searchQuery.toLowerCase());\r\n    return matchesDomain && matchesSearch;\r\n  });\r\n\r\n  // Domain styling that matches landing page aesthetics\r\n  const getDomainStyle = (domain: string) => {\r\n    const styles = {\r\n      spiritual: { icon: '🕉️', color: '#7c3aed', label: 'Spiritual' },\r\n      scientific: { icon: '🔬', color: '#2563eb', label: 'Scientific' },\r\n      historical: { icon: '📜', color: '#dc2626', label: 'Historical' },\r\n      philosophical: { icon: '🤔', color: '#ea580c', label: 'Philosophical' },\r\n      literary: { icon: '📚', color: '#059669', label: 'Literary' }\r\n    };\r\n    return styles[domain as keyof typeof styles] || styles.spiritual;\r\n  };\r\n\r\n  if (!showAsDialog) return null;\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      background: 'rgba(0, 0, 0, 0.5)',\r\n      backdropFilter: 'blur(10px)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 1000,\r\n      padding: '2rem'\r\n    }}>\r\n      <div style={{\r\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n        borderRadius: '1.5rem',\r\n        padding: '2rem',\r\n        maxWidth: '900px',\r\n        width: '100%',\r\n        maxHeight: '80vh',\r\n        overflowY: 'auto',\r\n        position: 'relative',\r\n        boxShadow: '0 20px 60px rgba(0, 0, 0, 0.3)',\r\n        border: '1px solid rgba(255, 255, 255, 0.2)',\r\n        color: 'white',\r\n        fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\"\r\n      }}>\r\n        {/* Header */}\r\n        <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          marginBottom: '1.5rem'\r\n        }}>\r\n          <div style={{ display: 'flex', alignItems: 'center', gap: '0.75rem' }}>\r\n            <span style={{ fontSize: '1.5rem' }}>🎭</span>\r\n            <h2 style={{\r\n              margin: 0,\r\n              fontSize: '1.5rem',\r\n              fontWeight: '700',\r\n              color: 'white',\r\n              textShadow: '0 2px 4px rgba(0, 0, 0, 0.3)'\r\n            }}>\r\n              Select Personality\r\n            </h2>\r\n          </div>\r\n          {onClose && (\r\n            <button\r\n              onClick={onClose}\r\n              style={{\r\n                background: 'rgba(255, 255, 255, 0.2)',\r\n                border: '1px solid rgba(255, 255, 255, 0.3)',\r\n                borderRadius: '0.5rem',\r\n                padding: '0.5rem',\r\n                color: 'white',\r\n                cursor: 'pointer',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                transition: 'all 0.3s ease'\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.background = 'rgba(255, 255, 255, 0.3)';\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.currentTarget.style.background = 'rgba(255, 255, 255, 0.2)';\r\n              }}\r\n            >\r\n              <X size={20} />\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Search */}\r\n        <div style={{\r\n          position: 'relative',\r\n          marginBottom: '1.5rem'\r\n        }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search personalities...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            style={{\r\n              width: '100%',\r\n              background: 'rgba(255, 255, 255, 0.1)',\r\n              border: '1px solid rgba(255, 255, 255, 0.2)',\r\n              borderRadius: '1rem',\r\n              padding: '1rem 1rem 1rem 3rem',\r\n              color: 'white',\r\n              fontSize: '1rem',\r\n              outline: 'none',\r\n              backdropFilter: 'blur(10px)',\r\n              boxSizing: 'border-box'\r\n            }}\r\n          />\r\n          <Sparkles\r\n            size={18}\r\n            style={{\r\n              position: 'absolute',\r\n              left: '1rem',\r\n              top: '50%',\r\n              transform: 'translateY(-50%)',\r\n              color: 'rgba(255, 255, 255, 0.6)'\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {/* Domain Filters */}\r\n        <div style={{\r\n          display: 'flex',\r\n          gap: '0.5rem',\r\n          marginBottom: '2rem',\r\n          flexWrap: 'wrap'\r\n        }}>\r\n          <button\r\n            onClick={() => setSelectedDomain('all')}\r\n            style={{\r\n              background: selectedDomain === 'all' \r\n                ? 'linear-gradient(135deg, #fbbf24, #f59e0b)' \r\n                : 'rgba(255, 255, 255, 0.1)',\r\n              border: '1px solid rgba(255, 255, 255, 0.2)',\r\n              borderRadius: '1.5rem',\r\n              padding: '0.5rem 1rem',\r\n              color: 'white',\r\n              fontSize: '0.9rem',\r\n              fontWeight: '500',\r\n              cursor: 'pointer',\r\n              transition: 'all 0.3s ease',\r\n              backdropFilter: 'blur(10px)'\r\n            }}\r\n          >\r\n            All\r\n          </button>\r\n          {domains.map(domain => {\r\n            const domainStyle = getDomainStyle(domain);\r\n            return (\r\n              <button\r\n                key={domain}\r\n                onClick={() => setSelectedDomain(domain)}\r\n                style={{\r\n                  background: selectedDomain === domain \r\n                    ? 'linear-gradient(135deg, #fbbf24, #f59e0b)' \r\n                    : 'rgba(255, 255, 255, 0.1)',\r\n                  border: '1px solid rgba(255, 255, 255, 0.2)',\r\n                  borderRadius: '1.5rem',\r\n                  padding: '0.5rem 1rem',\r\n                  color: 'white',\r\n                  fontSize: '0.9rem',\r\n                  fontWeight: '500',\r\n                  cursor: 'pointer',\r\n                  transition: 'all 0.3s ease',\r\n                  backdropFilter: 'blur(10px)',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '0.5rem'\r\n                }}\r\n              >\r\n                <span>{domainStyle.icon}</span>\r\n                {domainStyle.label}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* Personality Grid */}\r\n        <div style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))',\r\n          gap: '1rem'\r\n        }}>\r\n          {filteredPersonalities.map((personality) => {\r\n            const domainStyle = getDomainStyle(personality.domain);\r\n            const isSelected = selectedPersonalityId === personality.id;\r\n            \r\n            return (\r\n              <div\r\n                key={personality.id}\r\n                onClick={() => onPersonalitySelect(personality)}\r\n                style={{\r\n                  background: isSelected \r\n                    ? 'linear-gradient(135deg, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.1))' \r\n                    : 'rgba(255, 255, 255, 0.1)',\r\n                  border: isSelected \r\n                    ? '2px solid #fbbf24' \r\n                    : '1px solid rgba(255, 255, 255, 0.2)',\r\n                  borderRadius: '1rem',\r\n                  padding: '1.5rem',\r\n                  cursor: 'pointer',\r\n                  transition: 'all 0.3s ease',\r\n                  backdropFilter: 'blur(10px)',\r\n                  position: 'relative',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '1rem'\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  if (!isSelected) {\r\n                    e.currentTarget.style.background = 'rgba(255, 255, 255, 0.15)';\r\n                    e.currentTarget.style.transform = 'translateY(-2px)';\r\n                    e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.2)';\r\n                  }\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  if (!isSelected) {\r\n                    e.currentTarget.style.background = 'rgba(255, 255, 255, 0.1)';\r\n                    e.currentTarget.style.transform = 'translateY(0)';\r\n                    e.currentTarget.style.boxShadow = 'none';\r\n                  }\r\n                }}\r\n              >\r\n                {/* Icon */}\r\n                <div style={{\r\n                  width: '4rem',\r\n                  height: '4rem',\r\n                  background: `linear-gradient(135deg, ${domainStyle.color}, ${domainStyle.color}CC)`,\r\n                  borderRadius: '1rem',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  fontSize: '1.5rem',\r\n                  flexShrink: 0,\r\n                  boxShadow: '0 4px 12px rgba(0, 0, 0, 0.2)'\r\n                }}>\r\n                  {domainStyle.icon}\r\n                </div>\r\n\r\n                {/* Content */}\r\n                <div style={{ flex: 1, minWidth: 0 }}>\r\n                  <h3 style={{\r\n                    margin: '0 0 0.5rem 0',\r\n                    fontSize: '1.25rem',\r\n                    fontWeight: '700',\r\n                    color: 'white',\r\n                    textShadow: '0 1px 2px rgba(0, 0, 0, 0.3)'\r\n                  }}>\r\n                    {personality.display_name || personality.name || 'Unknown'}\r\n                  </h3>\r\n                  \r\n                  <p style={{\r\n                    margin: '0 0 1rem 0',\r\n                    fontSize: '0.9rem',\r\n                    color: 'rgba(255, 255, 255, 0.8)',\r\n                    lineHeight: '1.4',\r\n                    display: '-webkit-box',\r\n                    WebkitLineClamp: 2,\r\n                    WebkitBoxOrient: 'vertical',\r\n                    overflow: 'hidden'\r\n                  }}>\r\n                    {personality.description}\r\n                  </p>\r\n                  \r\n                  <div style={{\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    gap: '1rem',\r\n                    fontSize: '0.8rem',\r\n                    color: 'rgba(255, 255, 255, 0.7)'\r\n                  }}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '0.25rem' }}>\r\n                      <Clock size={12} />\r\n                      <span>{personality.time_period}</span>\r\n                    </div>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '0.25rem' }}>\r\n                      <BookOpen size={12} />\r\n                      <span>{personality.expertise_areas?.slice(0, 2).join(', ') || 'General guidance'}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Domain Badge */}\r\n                <div style={{\r\n                  position: 'absolute',\r\n                  top: '1rem',\r\n                  right: '1rem',\r\n                  background: `${domainStyle.color}22`,\r\n                  border: `1px solid ${domainStyle.color}`,\r\n                  borderRadius: '1rem',\r\n                  padding: '0.25rem 0.75rem',\r\n                  fontSize: '0.75rem',\r\n                  fontWeight: '600',\r\n                  color: domainStyle.color,\r\n                  textTransform: 'uppercase',\r\n                  letterSpacing: '0.5px'\r\n                }}>\r\n                  {domainStyle.label}\r\n                </div>\r\n\r\n                {/* Selection Indicator */}\r\n                {isSelected && (\r\n                  <div style={{\r\n                    position: 'absolute',\r\n                    top: '-0.5rem',\r\n                    right: '-0.5rem',\r\n                    width: '2rem',\r\n                    height: '2rem',\r\n                    background: 'linear-gradient(135deg, #fbbf24, #f59e0b)',\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    color: 'white',\r\n                    fontSize: '0.8rem',\r\n                    fontWeight: '700',\r\n                    boxShadow: '0 4px 12px rgba(251, 191, 36, 0.4)'\r\n                  }}>\r\n                    ✓\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* No Results */}\r\n        {filteredPersonalities.length === 0 && (\r\n          <div style={{\r\n            textAlign: 'center',\r\n            padding: '3rem 2rem',\r\n            color: 'rgba(255, 255, 255, 0.7)'\r\n          }}>\r\n            <Brain size={48} style={{ marginBottom: '1rem', opacity: 0.5 }} />\r\n            <h3 style={{ margin: '0 0 0.5rem 0', fontSize: '1.2rem' }}>No personalities found</h3>\r\n            <p style={{ margin: 0, fontSize: '0.9rem' }}>\r\n              Try adjusting your search or domain filter\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalitySelector;","import React, { useState, useEffect } from 'react';\r\nimport { Send, Mic, MicOff, MessageSquare, Users } from 'lucide-react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport PersonalitySelector from './PersonalitySelector';\r\nimport { usePersonality, Personality } from '../contexts/PersonalityContext';\r\nimport { getApiBaseUrl } from '../config/environment';\r\nimport '../styles/spiritual-theme.css';\r\n\r\ninterface Message {\r\n  id: string;\r\n  text: string;\r\n  isUser: boolean;\r\n  timestamp: Date;\r\n  personality?: string;\r\n}\r\n\r\nexport default function CleanSpiritualInterface() {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Add animation styles\r\n  useEffect(() => {\r\n    const styles = `\r\n      @keyframes pulse {\r\n        0%, 100% { opacity: 0.4; }\r\n        50% { opacity: 1; }\r\n      }\r\n    `;\r\n    \r\n    if (!document.getElementById('pulse-animation')) {\r\n      const styleSheet = document.createElement('style');\r\n      styleSheet.id = 'pulse-animation';\r\n      styleSheet.textContent = styles;\r\n      document.head.appendChild(styleSheet);\r\n    }\r\n  }, []);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [showPersonalitySelector, setShowPersonalitySelector] = useState(false);\r\n  \r\n  // Use PersonalityContext instead of local state\r\n  const { \r\n    selectedPersonality, \r\n    setSelectedPersonality, \r\n    availablePersonalities, \r\n    personalityLoading,\r\n    loadPersonalities \r\n  } = usePersonality();\r\n\r\n  // Load personalities on component mount if not already loaded\r\n  useEffect(() => {\r\n    if (availablePersonalities.length === 0 && !personalityLoading) {\r\n      loadPersonalities();\r\n    }\r\n  }, [availablePersonalities.length, personalityLoading, loadPersonalities]);\r\n\r\n  // Auto-show personality selector if no personality is selected and personalities are loaded\r\n  useEffect(() => {\r\n    if (availablePersonalities.length > 0 && !selectedPersonality && !personalityLoading) {\r\n      setShowPersonalitySelector(true);\r\n    }\r\n  }, [availablePersonalities.length, selectedPersonality, personalityLoading]);\r\n\r\n  const handlePersonalitySelect = (personality: Personality) => {\r\n    setSelectedPersonality(personality);\r\n    setShowPersonalitySelector(false);\r\n    // Clear messages when switching personality to provide fresh context\r\n    setMessages([]);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!inputText.trim() || isLoading || !selectedPersonality) return;\r\n\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      text: inputText,\r\n      isUser: true,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    const question = inputText;\r\n    setInputText('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Get conversation context (last 4 messages for context)\r\n      const recentMessages = messages.slice(-4).map(msg => ({\r\n        role: msg.isUser ? 'user' : 'assistant',\r\n        content: msg.text\r\n      }));\r\n\r\n      // Call real spiritual guidance API with conversation context\r\n      const apiUrl = getApiBaseUrl();\r\n      const response = await fetch(`${apiUrl}/spiritual_guidance`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          query: question,\r\n          language: 'English',\r\n          include_citations: true,\r\n          voice_enabled: false,\r\n          conversation_context: recentMessages,\r\n          personality_id: selectedPersonality.id\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`API error: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Use the response as-is from the backend\r\n      // The backend should handle inline citations if needed\r\n      const apiResponse: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        text: data.response,\r\n        isUser: false,\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      setMessages(prev => [...prev, apiResponse]);\r\n      \r\n    } catch (error) {\r\n      console.error('Error calling spiritual guidance API:', error);\r\n      \r\n      // Fallback response for errors\r\n      const errorResponse: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        text: \"🙏 I'm having trouble connecting to the spiritual guidance service. Please check your connection and try again, dear soul. (Frontend Error)\",\r\n        isUser: false,\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      setMessages(prev => [...prev, errorResponse]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Dynamic quick prompts based on selected personality domain\r\n  const getQuickPrompts = () => {\r\n    if (!selectedPersonality) {\r\n      return [\r\n        \"How can I find my dharma and live according to my true purpose?\",\r\n        \"How can I maintain equanimity during life's ups and downs?\",\r\n        \"What are the different paths of yoga and which one suits me?\",\r\n        \"How do I overcome anger and jealousy through spiritual practice?\"\r\n      ];\r\n    }\r\n\r\n    switch (selectedPersonality.domain) {\r\n      case 'scientific':\r\n        return [\r\n          \"How does the theory of relativity change our understanding of time and space?\",\r\n          \"What is the relationship between energy and matter in the universe?\",\r\n          \"How do we approach scientific discovery and overcome preconceived notions?\",\r\n          \"What role does imagination play in scientific breakthroughs?\"\r\n        ];\r\n      case 'historical':\r\n        return [\r\n          \"What lessons can we learn from leadership during times of crisis?\",\r\n          \"How do we build unity and preserve democracy in challenging times?\",\r\n          \"What role does character play in effective governance?\",\r\n          \"How do we balance justice with compassion in difficult decisions?\"\r\n        ];\r\n      case 'philosophical':\r\n        return [\r\n          \"How do we cultivate virtue and wisdom in daily life?\",\r\n          \"What is the relationship between reason and emotion in decision-making?\",\r\n          \"How do we find meaning and purpose in the face of adversity?\",\r\n          \"What does it mean to live according to nature and cosmic order?\"\r\n        ];\r\n      case 'literary':\r\n        return [\r\n          \"How does literature help us understand the human condition?\",\r\n          \"What is the relationship between beauty and truth in art?\",\r\n          \"How do stories shape our understanding of morality and ethics?\",\r\n          \"What role does creativity play in personal transformation?\"\r\n        ];\r\n      case 'spiritual':\r\n      default:\r\n        return [\r\n          \"How can I find my dharma and live according to my true purpose?\",\r\n          \"How can I maintain equanimity during life's ups and downs?\",\r\n          \"What are the different paths of yoga and which one suits me?\",\r\n          \"How do I overcome anger and jealousy through spiritual practice?\"\r\n        ];\r\n    }\r\n  };\r\n\r\n  const quickPrompts = getQuickPrompts();\r\n\r\n  return (\r\n    <div style={{\r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n      color: 'white',\r\n      fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\"\r\n    }}>\r\n      {/* Header */}\r\n      <header style={{\r\n        padding: '1rem 2rem',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        background: 'rgba(255, 255, 255, 0.1)',\r\n        backdropFilter: 'blur(10px)',\r\n        borderBottom: '1px solid rgba(255, 255, 255, 0.2)'\r\n      }}>\r\n        <div style={{ display: 'flex', alignItems: 'center', gap: '0.75rem' }}>\r\n          <div style={{\r\n            width: '3rem',\r\n            height: '3rem',\r\n            background: 'linear-gradient(135deg, #fbbf24, #f59e0b)',\r\n            borderRadius: '50%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            fontSize: '1.5rem',\r\n            fontWeight: 'bold',\r\n            color: 'white',\r\n            border: '2px solid rgba(255, 255, 255, 0.3)',\r\n            boxShadow: '0 4px 16px rgba(0, 0, 0, 0.1)'\r\n          }}>\r\n            V\r\n          </div>\r\n          <div>\r\n            <h1 style={{ margin: 0, fontSize: '1.5rem', fontWeight: '700' }}>Vimarsh</h1>\r\n            <p style={{ \r\n              margin: 0, \r\n              fontSize: '0.85rem', \r\n              opacity: 0.9,\r\n              fontWeight: '500',\r\n              color: '#fbbf24'\r\n            }}>\r\n              Wisdom Without Boundaries\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Personality Selector Toggle */}\r\n        <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\r\n          <div style={{\r\n            background: 'rgba(255, 255, 255, 0.1)',\r\n            borderRadius: '0.75rem',\r\n            padding: '0.5rem 1rem',\r\n            border: '1px solid rgba(255, 255, 255, 0.2)',\r\n            backdropFilter: 'blur(10px)'\r\n          }}>\r\n            <span style={{ fontSize: '0.9rem', fontWeight: '600' }}>\r\n              {selectedPersonality?.name || 'Loading...'}\r\n            </span>\r\n            <span style={{ \r\n              fontSize: '0.75rem', \r\n              opacity: 0.7, \r\n              marginLeft: '0.5rem',\r\n              textTransform: 'uppercase',\r\n              letterSpacing: '0.5px'\r\n            }}>\r\n              {selectedPersonality?.domain === 'spiritual' ? 'SPIRITUAL' :\r\n               selectedPersonality?.domain === 'scientific' ? 'SCIENTIFIC' :\r\n               selectedPersonality?.domain === 'historical' ? 'HISTORICAL' :\r\n               selectedPersonality?.domain === 'philosophical' ? 'PHILOSOPHICAL' :\r\n               selectedPersonality?.domain === 'literary' ? 'LITERARY' :\r\n               'SPIRITUAL'}\r\n            </span>\r\n          </div>\r\n          <button \r\n            onClick={() => setShowPersonalitySelector(!showPersonalitySelector)}\r\n            style={{\r\n              background: 'rgba(255, 255, 255, 0.2)',\r\n              border: '1px solid rgba(255, 255, 255, 0.3)',\r\n              color: 'white',\r\n              padding: '0.5rem',\r\n              borderRadius: '0.5rem',\r\n              cursor: 'pointer',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              transition: 'all 0.3s ease'\r\n            }}\r\n            title=\"Change Personality\"\r\n            disabled={!selectedPersonality}\r\n          >\r\n            <Users size={18} />\r\n          </button>\r\n          <button\r\n            onClick={() => setIsListening(!isListening)}\r\n            style={{\r\n              background: isListening ? 'rgba(239, 68, 68, 0.2)' : 'rgba(255, 255, 255, 0.2)',\r\n              border: `1px solid ${isListening ? 'rgba(239, 68, 68, 0.3)' : 'rgba(255, 255, 255, 0.3)'}`,\r\n              color: 'white',\r\n              padding: '0.5rem',\r\n              borderRadius: '0.5rem',\r\n              cursor: 'pointer',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              transition: 'all 0.3s ease'\r\n            }}\r\n          >\r\n            {isListening ? <MicOff size={18} /> : <Mic size={18} />}\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Personality Selector Modal */}\r\n      {showPersonalitySelector && (\r\n        <PersonalitySelector\r\n          availablePersonalities={availablePersonalities}\r\n          selectedPersonalityId={selectedPersonality?.id}\r\n          onPersonalitySelect={handlePersonalitySelect}\r\n          onClose={() => setShowPersonalitySelector(false)}\r\n          showAsDialog={true}\r\n        />\r\n      )}\r\n\r\n      {/* Main Content */}\r\n      <div style={{\r\n        maxWidth: '1000px',\r\n        margin: '0 auto',\r\n        padding: '1rem 2rem',\r\n        minHeight: 'calc(100vh - 140px)',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n      }}>\r\n        {/* Welcome Section */}\r\n        {messages.length === 0 && (\r\n          <div style={{\r\n            textAlign: 'center',\r\n            padding: '2rem 1rem',\r\n            marginBottom: '1rem'\r\n          }}>\r\n            <div style={{\r\n              fontSize: '4rem',\r\n              marginBottom: '1rem',\r\n              filter: 'drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3))'\r\n            }}>🏵️</div>\r\n            \r\n            {!selectedPersonality ? (\r\n              <>\r\n                <h2 style={{\r\n                  fontSize: '2.5rem',\r\n                  fontWeight: '700',\r\n                  marginBottom: '1rem',\r\n                  textShadow: '0 2px 4px rgba(0, 0, 0, 0.3)'\r\n                }}>Welcome to Vimarsh</h2>\r\n                <p style={{\r\n                  fontSize: '1.25rem',\r\n                  opacity: 0.9,\r\n                  maxWidth: '600px',\r\n                  margin: '0 auto 2rem',\r\n                  lineHeight: '1.6',\r\n                  textShadow: '0 1px 2px rgba(0, 0, 0, 0.2)'\r\n                }}>\r\n                  <strong>Wisdom Without Boundaries</strong><br/>\r\n                  Choose your spiritual guide to begin your journey of divine wisdom and enlightenment.\r\n                </p>\r\n                <button\r\n                  onClick={() => setShowPersonalitySelector(true)}\r\n                  style={{\r\n                    background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',\r\n                    border: 'none',\r\n                    color: 'white',\r\n                    padding: '1rem 2rem',\r\n                    borderRadius: '1rem',\r\n                    fontSize: '1.1rem',\r\n                    fontWeight: '600',\r\n                    cursor: 'pointer',\r\n                    boxShadow: '0 4px 12px rgba(59, 130, 246, 0.3)',\r\n                    transition: 'all 0.3s ease'\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.transform = 'translateY(-2px)';\r\n                    e.currentTarget.style.boxShadow = '0 8px 20px rgba(59, 130, 246, 0.4)';\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.transform = 'translateY(0)';\r\n                    e.currentTarget.style.boxShadow = '0 4px 12px rgba(59, 130, 246, 0.3)';\r\n                  }}\r\n                >\r\n                  Choose Your Spiritual Guide\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <h2 style={{\r\n                  fontSize: '2.5rem',\r\n                  fontWeight: '700',\r\n                  marginBottom: '1rem',\r\n                  textShadow: '0 2px 4px rgba(0, 0, 0, 0.3)'\r\n                }}>Welcome to Your {selectedPersonality.domain === 'spiritual' ? 'Spiritual' :\r\n                  selectedPersonality.domain === 'scientific' ? 'Scientific' :\r\n                  selectedPersonality.domain === 'historical' ? 'Historical' :\r\n                  selectedPersonality.domain === 'philosophical' ? 'Philosophical' :\r\n                  selectedPersonality.domain === 'literary' ? 'Literary' :\r\n                  'Spiritual'} Journey</h2>\r\n                <p style={{\r\n                  fontSize: '1.25rem',\r\n                  opacity: 0.9,\r\n                  maxWidth: '600px',\r\n                  margin: '0 auto 1rem',\r\n                  lineHeight: '1.6',\r\n                  textShadow: '0 1px 2px rgba(0, 0, 0, 0.2)'\r\n                }}>\r\n                  {selectedPersonality.domain === 'spiritual' \r\n                    ? 'Ask questions about spirituality, philosophy, and find wisdom from ancient teachings with' \r\n                    : selectedPersonality.domain === 'scientific'\r\n                    ? 'Explore the mysteries of the universe and scientific discoveries with'\r\n                    : selectedPersonality.domain === 'historical'\r\n                    ? 'Learn from history\\'s great leaders and their timeless wisdom with'\r\n                    : selectedPersonality.domain === 'philosophical'\r\n                    ? 'Contemplate life\\'s deepest questions and philosophical insights with'\r\n                    : selectedPersonality.domain === 'literary'\r\n                    ? 'Discover the beauty and wisdom found in great literature with'\r\n                    : 'Ask questions about spirituality, philosophy, and find wisdom from ancient teachings with'}{' '}\r\n                  <strong>{selectedPersonality.name}</strong>.\r\n                </p>\r\n                <p style={{\r\n                  fontSize: '1rem',\r\n                  opacity: 0.8,\r\n                  marginBottom: '2rem',\r\n                  fontStyle: 'italic'\r\n                }}>\r\n                  {selectedPersonality.description}\r\n                </p>\r\n                \r\n                <div style={{\r\n                  display: 'grid',\r\n                  gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\r\n                  gap: '1rem',\r\n                  maxWidth: '800px',\r\n                  margin: '0 auto'\r\n                }}>\r\n                  {quickPrompts.map((prompt, index) => (\r\n                    <button\r\n                      key={index}\r\n                      onClick={() => setInputText(prompt)}\r\n                      style={{\r\n                        background: 'rgba(255, 255, 255, 0.1)',\r\n                        border: '1px solid rgba(255, 255, 255, 0.2)',\r\n                        color: 'white',\r\n                        padding: '1rem',\r\n                        borderRadius: '0.75rem',\r\n                        cursor: 'pointer',\r\n                        textAlign: 'left',\r\n                        fontSize: '0.9rem',\r\n                        lineHeight: '1.4',\r\n                        transition: 'all 0.3s ease',\r\n                        backdropFilter: 'blur(10px)'\r\n                      }}\r\n                      onMouseEnter={(e) => {\r\n                        e.currentTarget.style.background = 'rgba(255, 255, 255, 0.2)';\r\n                        e.currentTarget.style.transform = 'translateY(-2px)';\r\n                        e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.2)';\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.currentTarget.style.background = 'rgba(255, 255, 255, 0.1)';\r\n                        e.currentTarget.style.transform = 'translateY(0)';\r\n                        e.currentTarget.style.boxShadow = 'none';\r\n                      }}\r\n                    >\r\n                      {prompt}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Messages */}\r\n        <div style={{\r\n          flex: '1',\r\n          marginBottom: '2rem',\r\n          overflowY: 'auto'\r\n        }}>\r\n          {messages.map((message) => (\r\n            <div key={message.id} style={{\r\n              display: 'flex',\r\n              justifyContent: message.isUser ? 'flex-end' : 'flex-start',\r\n              marginBottom: '1rem'\r\n            }}>\r\n              <div style={{\r\n                maxWidth: '70%',\r\n                background: message.isUser \r\n                  ? 'linear-gradient(135deg, #3b82f6, #1d4ed8)' \r\n                  : 'rgba(255, 255, 255, 0.1)',\r\n                borderRadius: '1rem',\r\n                padding: '1rem',\r\n                backdropFilter: 'blur(10px)',\r\n                border: '1px solid rgba(255, 255, 255, 0.2)',\r\n                boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)'\r\n              }}>\r\n                {!message.isUser && (\r\n                  <div style={{\r\n                    fontSize: '0.8rem',\r\n                    opacity: 0.8,\r\n                    marginBottom: '0.5rem',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: '0.5rem'\r\n                  }}>\r\n                    <span>🎭</span> {selectedPersonality?.display_name || 'Spiritual Guide'}\r\n                  </div>\r\n                )}\r\n                <div style={{\r\n                  fontSize: '0.95rem',\r\n                  lineHeight: '1.5'\r\n                }}>\r\n                  {message.isUser ? (\r\n                    <div>{message.text}</div>\r\n                  ) : (\r\n                    <ReactMarkdown>{message.text}</ReactMarkdown>\r\n                  )}\r\n                </div>\r\n                <div style={{\r\n                  fontSize: '0.7rem',\r\n                  opacity: 0.6,\r\n                  marginTop: '0.5rem',\r\n                  textAlign: message.isUser ? 'right' : 'left'\r\n                }}>\r\n                  {message.timestamp.toLocaleTimeString()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Loading */}\r\n        {isLoading && (\r\n          <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: '2rem',\r\n            marginBottom: '2rem'\r\n          }}>\r\n            <div style={{\r\n              background: 'rgba(255, 255, 255, 0.1)',\r\n              borderRadius: '1rem',\r\n              padding: '1.5rem 2rem',\r\n              backdropFilter: 'blur(10px)',\r\n              border: '1px solid rgba(255, 255, 255, 0.2)',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: '1rem'\r\n            }}>\r\n              <div style={{\r\n                display: 'flex',\r\n                gap: '0.25rem'\r\n              }}>\r\n                {[0, 1, 2].map((i) => (\r\n                  <div\r\n                    key={i}\r\n                    style={{\r\n                      width: '8px',\r\n                      height: '8px',\r\n                      background: 'white',\r\n                      borderRadius: '50%',\r\n                      animation: `pulse 1.5s ease-in-out ${i * 0.2}s infinite`\r\n                    }}\r\n                  />\r\n                ))}\r\n              </div>\r\n              <span style={{ fontSize: '0.9rem' }}>\r\n                {selectedPersonality?.display_name || 'Your guide'} is reflecting...\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Enhanced Input Form */}\r\n        <form \r\n          onSubmit={handleSubmit}\r\n          style={{\r\n            position: 'sticky',\r\n            bottom: '1rem',\r\n            background: selectedPersonality ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.05)',\r\n            borderRadius: '1.5rem',\r\n            padding: '1rem',\r\n            backdropFilter: 'blur(10px)',\r\n            border: `1px solid ${selectedPersonality ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'}`,\r\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\r\n            display: 'flex',\r\n            gap: '1rem',\r\n            alignItems: 'center',\r\n            opacity: selectedPersonality ? 1 : 0.6,\r\n            pointerEvents: selectedPersonality ? 'auto' : 'none'\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n            placeholder={selectedPersonality ? \"Ask your spiritual question...\" : \"Please choose a spiritual guide first...\"}\r\n            disabled={!selectedPersonality}\r\n            style={{\r\n              flex: '1',\r\n              background: selectedPersonality ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.05)',\r\n              border: `1px solid ${selectedPersonality ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'}`,\r\n              borderRadius: '1rem',\r\n              padding: '1rem 1.5rem',\r\n              color: 'white',\r\n              fontSize: '1rem',\r\n              outline: 'none',\r\n              backdropFilter: 'blur(10px)',\r\n              cursor: selectedPersonality ? 'text' : 'not-allowed'\r\n            }}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!inputText.trim() || isLoading || !selectedPersonality}\r\n            style={{\r\n              background: inputText.trim() && !isLoading && selectedPersonality\r\n                ? 'linear-gradient(135deg, #3b82f6, #1d4ed8)' \r\n                : 'rgba(255, 255, 255, 0.1)',\r\n              border: 'none',\r\n              borderRadius: '1rem',\r\n              padding: '1rem',\r\n              color: 'white',\r\n              cursor: inputText.trim() && !isLoading && selectedPersonality ? 'pointer' : 'not-allowed',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              minWidth: '3rem',\r\n              transition: 'all 0.3s ease',\r\n              boxShadow: inputText.trim() && !isLoading && selectedPersonality ? '0 4px 12px rgba(59, 130, 246, 0.3)' : 'none'\r\n            }}\r\n          >\r\n            <Send size={18} />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["_ref","availablePersonalities","selectedPersonalityId","onPersonalitySelect","onClose","showAsDialog","selectedDomain","setSelectedDomain","useState","searchQuery","setSearchQuery","domains","Array","from","Set","map","p","domain","filteredPersonalities","filter","personality","matchesDomain","matchesSearch","name","toLowerCase","includes","description","getDomainStyle","styles","spiritual","icon","color","label","scientific","historical","philosophical","literary","_jsx","style","position","top","left","right","bottom","background","backdropFilter","display","alignItems","justifyContent","zIndex","padding","children","_jsxs","borderRadius","maxWidth","width","maxHeight","overflowY","boxShadow","border","fontFamily","marginBottom","gap","fontSize","margin","fontWeight","textShadow","onClick","cursor","transition","onMouseEnter","e","currentTarget","onMouseLeave","X","size","type","placeholder","value","onChange","target","outline","boxSizing","Sparkles","transform","flexWrap","domainStyle","gridTemplateColumns","_personality$expertis","isSelected","id","height","concat","flexShrink","flex","minWidth","display_name","lineHeight","WebkitLineClamp","WebkitBoxOrient","overflow","Clock","time_period","BookOpen","expertise_areas","slice","join","textTransform","letterSpacing","length","textAlign","Brain","opacity","CleanSpiritualInterface","messages","setMessages","inputText","setInputText","isLoading","setIsLoading","useEffect","document","getElementById","styleSheet","createElement","textContent","head","appendChild","isListening","setIsListening","showPersonalitySelector","setShowPersonalitySelector","selectedPersonality","setSelectedPersonality","personalityLoading","loadPersonalities","usePersonality","quickPrompts","getQuickPrompts","minHeight","borderBottom","marginLeft","title","disabled","Users","MicOff","Mic","PersonalitySelector","flexDirection","_Fragment","fontStyle","prompt","index","message","isUser","text","ReactMarkdown","marginTop","timestamp","toLocaleTimeString","i","animation","onSubmit","async","preventDefault","trim","userMessage","Date","now","toString","prev","question","recentMessages","msg","role","content","apiUrl","getApiBaseUrl","response","fetch","method","headers","body","JSON","stringify","query","language","include_citations","voice_enabled","conversation_context","personality_id","ok","Error","status","data","json","apiResponse","error","console","errorResponse","pointerEvents","Send"],"sourceRoot":""}